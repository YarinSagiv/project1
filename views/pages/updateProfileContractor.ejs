<html>

<head>
    <link href="css/sty.css" rel="stylesheet">
</head>

<body>

    <header>
        <%- include('../partials/_header') %>
    </header>
    <form id="updateContractor" action="/updateContractor" method="POST" onsubmit="return beforeSubmit()">
        <label id="noField" style="display: none; font-size: 18px; color: red;">please enter at least one phone number
            and at least one job type</label>
        <label for="firstname"><b>First Name: </b></label>
        <input type="text" name="firstname" id="firstname" value="<%= firstName %>"
            oninput="this.value = this.value.replace(/[^a-zA-Z]/g, '').replace(/(\..?)\../g, '$1');" required>
        <br />
        <label for="lastname"><b>Last Name: </b></label>
        <input type="text" name="lastname" id="lastname" value="<%= lastName %>"
            oninput="this.value = this.value.replace(/[^a-zA-Z]/g, '').replace(/(\..?)\../g, '$1');" required>
        <br />
        <label for="email"><b>Email: </b></label>
        <input type="email" name="email" id="email" pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" required>
        <!-- TODO: check if really working -->
        <br />
        <label for="address" style="font-size:18px;">Do you have a business address?</label>
        <input type="checkbox" style="width: 18px; height: 18px;" name="addressC" id="addressC" value="true"
            onchange="addBusiness()" checked>
        <br />
        <label for="address" id="addressL"><b>Business Address: </b></label>
        <input type="text" name="address" id="address" required>
        <!-- TODO: if the check box is checked but this is empty -->
        <br />

        <label for="phonenumber"><b>Phone numbers: </b></label>
        <br /><label id="phoneError" style="color: red; font-size: 18px; display: none;"></label>
        <ul id="addedPhoneNumbers">
        </ul>
        <input type="text" style="display: none;" name="phonenumber" id="phonenumber" maxlength="10"
            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');">
        <button id="addAnotherPhoneB" type="button" class=button onclick="addAnotherPhone()"
            style="padding: 8px 15px;">add another phone number</button>
        <button id="addPhoneB" type="button" class=button onclick="addPhone()"
            style="padding: 8px 15px; display: none;">Add</button>
        <input type="hidden" id="phoneNumbers" name="phone">
        <!--to POST-->
        <br />

        <label for="jobTypesL"><b>Job Types </b></label><label style="font-size:18px;">select the services you provide:
        </label>
        <br />
        <select name="jobTypes" id="jobTypes" multiple>
            <option style="font-size:18px;" value="Hair Styling">Hair Styling</option>
            <option style="font-size:18px;" value="Makeup">Makeup</option>
            <option style="font-size:18px;" value="Event Stylist">Event Stylist</option>
            <option style="font-size:18px;" value="Sitting Organizer">Sitting Organizer</option>
            <option style="font-size:18px;" value="Photography">Photography</option>
            <option style="font-size:18px;" value="DJ">DJ</option>
            <option style="font-size:18px;" value="Musician">Musician</option>
            <option style="font-size:18px;" value="Atraction Provider">Attraction Provider</option>
            <option style="font-size:18px;" value="Invitation Printer">Invitation Printer</option>
        </select>
        <button type="button" class=button onclick="addType()" style="padding: 8px 15px;">add job</button>
        <!-- a list of the selected job types-->
        <br><label id="myJobTypes" style="font-size:18px; display: none;">My job types:</label>
        <label id="jobTypesErrorL" style="font-size:18px; color: red; display: none;"><br>please add a new job type
            before you delete the only one.</label>
        <ul id="selectedTypes"></ul>
        <input type="hidden" id="types" name="types">
        <!--to POST-->
        <br />

        <label for="gender"><b>Gender: </b></label><br>
        <input type="radio" id="male" name="gender" value="male" checked>
        <label for="male" style="font-size:22px;">Male&emsp;</label>
        <input type="radio" id="female" name="gender" value="female">
        <label for="female" style="font-size:22px;">Female&emsp;</label>
        <input type="radio" id="other" name="gender" value="other">
        <label for="other" style="font-size:22px;">Other</label>
        <br />

        <!--Areas:
        <br /><br /><label for="countryAreas"><b>areas where i can't work in: </b></label>
        <ul id="addedCountryAreas">
        </ul>
        <label id="noCountryAreas" style="font-size:22px;">no areas to show<br><br></label>
        <label style="font-size:18px;">choose another area:</label>
        <br>
        <select name="countryAreas" id="countryAreas">
            <option style="font-size:18px;" value="Golan Heights">Golan Heights</option>
            <option style="font-size:18px;" value="Galilee">Galilee</option>
            <option style="font-size:18px;" value="Coastal Plain">Coastal Plain</option>-->
        <!--TODO: add more areas-->
        <!--</select>
        <button id="addAountryAreaB" type="button" class=button onclick="addAnotherArea()"
            style="padding: 8px 15px;">add area</button>
        <button id="addAreaB" type="button" class=button onclick="addArea()"
            style="padding: 8px 15px; display: none;">Add</button>
        <br />
        <input type="hidden" id="areas" name="areas">-->
        <!--to POST-->

        <!--DATES OF UNAVAILABILITY-->
        <br /><label for="addedDates"><b>Dates when I am not available: </b></label>
        <br /><label id="dateError" style="color: red; font-size: 18px; display: none;"></label>
        <ul id="addedDates">
        </ul>
        <input type="date" style="display: none;" name="date" id="date">
        <button id="addAnotherDateB" type="button" class=button onclick="addAnotherDate()" style="padding: 8px 15px;">add another date</button>
        <button id="addDateB" type="button" class=button onclick="addDate()" style="padding: 8px 15px; display: none;">Add</button>
        <input type="hidden" id="dates" name="dates">
        <!--to POST-->
        <br />
        
        <button type="submit" class="button">update ditails</button>
    </form>
</body>

<script type="text/javascript">
    var loggedId;
    var jobTypes = [];
    var phoneNumbers = [];
    var dates = [] //TODO: get initial from db
    //var countryAreas = []; 

    //TODO: take all information from the data base and put in the right places in the form
    //console.log("<%= firstName %>");

    function show(id) {
        document.getElementById(id).style.display = 'block';
    }

    function hide(id) {
        document.getElementById(id).style.display = 'none';
    }

    function addBusiness() {/* this function shows and hides the business address label so that if the contractor worker
    doesn't have one then he can't enter one, and changes rather it is required.*/
        if (document.getElementById("address").style.display == 'none') {
            //show elemnets
            show("address");
            show("addressL");
            document.getElementById("address").required = true; //TODO: check if works
        }
        else {
            hide("address");
            hide("addressL");
            document.getElementById("address").required = false; //TODO: check if works
        }

    }

    function addType() {/* This function is to add a job type to the list of jobs. */
        var selElement = document.getElementById("jobTypes");
        hide("jobTypesErrorL");
        hide("noField");

        //add all selected values into the array
        for (var option of selElement.options) {
            if (option.selected && !jobTypes.includes(option.value)) { //making sure that each value is in the array once
                jobTypes.push(option.value);

                //------add to selected:------
                var ul = document.getElementById("selectedTypes");
                var li = document.createElement("li");
                li.appendChild(document.createTextNode(option.value));
                li.setAttribute("id", option.value);
                li.setAttribute("style", "font-size:18px;");

                //------span -> X symbol : REMOVE job type
                var span = document.createElement("span");
                span.appendChild(document.createTextNode('\u00D7'));
                span.setAttribute("style", "cursor: pointer;");
                //onclick
                span.addEventListener("click", function () {
                    /*
                        function to delete a job type.
                    */

                    if (jobTypes.length <= 1) {
                        var l = document.getElementById("jobTypesErrorL");
                        l.innerHTML = "please add a new job type before you delete the only one."
                        //l.style = "font-size:18px; color: red; display: block;"
                        l.style.display = 'block';
                        return;
                    }

                    this.parentElement.style.display = 'none';//hide

                    //remove the type from the types list:
                    jobTypes = jobTypes.filter(type => type != this.parentElement.id);
                    console.log(jobTypes);

                });

                //----adding the childs
                li.appendChild(span);
                ul.appendChild(li);

            }
            // dispaly my jobs label
            if (jobTypes.length != 0)
                show("myJobTypes");
        }

        //check:
        console.log(jobTypes);
    }

    function delPhone(li, id1) {
        console.log(phoneNumbers.length);
        console.log("id1=" + id1);
        if (phoneNumbers.length == 1) {
            var l = document.getElementById("phoneError");
            l.innerHTML = "please add a new phone number before you delete the only one."
            show("phoneError");
        }
        else {
            li.style.display = 'none';
            //remove the phone from the phones list:
            phoneNumbers = phoneNumbers.filter(phone => phone != id1);
            //for checking
            console.log(phoneNumbers);
        }
    }

    function addAnotherPhone() {
        show("phonenumber");
        hide("addAnotherPhoneB");
        show("addPhoneB");
        hide("noField");
        hide("phoneError");
        document.getElementById("phonenumber").focus();
        document.getElementById("phonenumber").value = "";
    }

    /*
        add phone adds a phone to the phones list and shows it on screen
    */
    function addPhone() {
        hide("noField");
        var text = document.getElementById("phonenumber").value;
        if (text.length <= 9) {
            var pho = document.getElementById("phoneError");
            show("phoneError");
            pho.innerHTML = "a phone number should have 10 digist"
            return;
        }
        else if (phoneNumbers.includes(text)) {
            var pho = document.getElementById("phoneError");
            show("phoneError");
            pho.innerHTML = "that phone number already exist"
            return;
        }


        console.log("leng: " + text.length);

        hide("phonenumber");
        show("addAnotherPhoneB");
        hide("addPhoneB");
        hide("phoneError");


        //add the phone to the list:
        var newPhone = text;
        phoneNumbers.push(newPhone);

        var ul = document.getElementById("addedPhoneNumbers");
        var li = document.createElement("li");
        li.appendChild(document.createTextNode(newPhone));
        li.setAttribute("id", newPhone);
        li.setAttribute("style", "font-size:18px;");

        //------span -> X symbol : REMOVE the phone number
        var span = document.createElement("span");
        span.appendChild(document.createTextNode('\u00D7'));
        span.setAttribute("style", "cursor: pointer;");
        //onclick
        span.addEventListener("click", function () {
            delPhone(this.parentElement, this.parentElement.id);
        });

        text.value = "";

        //----adding the childs
        li.appendChild(span);
        ul.appendChild(li);
    }

    /*function addAnotherArea() {
        var selElement = document.getElementById("countryAreas");
        //document.getElementById("jobTypesErrorL").style.display='none';

        for (var option of selElement.options) {
            if (option.selected && !countryAreas.includes(option.value)) { //making sure that each value is in the array once
                countryAreas.push(option.value);

                document.getElementById("noCountryAreas").style.display = "none";

                //------add to selected:------
                var ul = document.getElementById("addedCountryAreas");
                var li = document.createElement("li");
                li.appendChild(document.createTextNode(option.value));
                li.setAttribute("id", option.value);
                li.setAttribute("style", "font-size:18px;");

                //------span -> X symbol : REMOVE job type
                var span = document.createElement("span");
                span.appendChild(document.createTextNode('\u00D7'));
                span.setAttribute("style", "cursor: pointer;");
                //onclick
                span.addEventListener("click", function () {
                    
                        //function to delete an area
                    

                    this.parentElement.style.display = 'none';

                    //remove the type from the types list:
                    countryAreas = countryAreas.filter(type => type != this.parentElement.id);
                    console.log(countryAreas);

                    if (countryAreas.length == 0)
                        document.getElementById("noCountryAreas").style.display = "block";

                });

                //----adding the childs
                li.appendChild(span);
                ul.appendChild(li);
            }
        }

    }*/

    function addAnotherDate() {
        show("date");
        hide("addAnotherDateB");
        show("addDateB");
        hide("noField");
        document.getElementById("date").focus();
        //document.getElementById("phonenumber").value = "";
    }

    function addDate() {
        hide("noField");
        var newDate = document.getElementById("date").value;

        if (dates.includes(newDate)) {
            var pho = document.getElementById("dateError");
            show("dateError");
            pho.innerHTML = "that date already exist"
            return;
        }

        hide("date");
        show("addAnotherDateB");
        hide("addDateB");
        hide("dateError");


        //add the phone to the list:

        dates.push(newDate);

        var ul = document.getElementById("addedDates");
        var li = document.createElement("li");
        li.appendChild(document.createTextNode(newDate));
        li.setAttribute("id", newDate);
        li.setAttribute("style", "font-size:18px;");

        //------span -> X symbol : REMOVE the phone number
        var span = document.createElement("span");
        span.appendChild(document.createTextNode('\u00D7'));
        span.setAttribute("style", "cursor: pointer;");
        //onclick
        span.addEventListener("click", function () {
            delDate(this.parentElement, this.parentElement.id);
        });

        //----adding the childs
        li.appendChild(span);
        ul.appendChild(li);
    }

    function delDate(li, id1) {

        li.style.display = 'none';
        //remove the phone from the phones list:
        dates = dates.filter(date => date != id1);
        //for checking
        console.log(dates);

    }


    function initialDitails() {
        /*
            this function gets the information already in the database for this specific contractor worker
        */
        //---first name
        document.getElementById("firstname").value = "<%= firstName %>";

        //---last name
        document.getElementById("lastname").value = "<%= lastName %>";

        if ("<%=email%>")
            document.getElementById("email").value = "<%= email %>";

        console.log("<%=hasAddress%>");
        if ("<%=hasAddress%>" == "false") {
            document.getElementById("addressC").checked = false;
            addBusiness();
        }
        else {
            document.getElementById("address").value = "<%= address %>";
        }

        var numbers;
        if (numbers = "<%= phoneNumbers %>") {
            numbers = numbers.split(",");
            console.log(numbers.toString);
            for (var n of numbers) {
                document.getElementById("phonenumber").value = n.trim();
                addPhone();
            }

        }

        var jobs;
        if (jobs = "<%= jobTypes %>") {
            jobs = jobs.split(",");
            console.log(jobs.toString);
            for (var j of jobs) {
                document.getElementById("jobTypes").value = j.trim();
                addType();
            }

        }

        //GENDER
        switch ("<%=gender%>") {
            case "male": radiobtn = document.getElementById("male").checked = true; break;
            case "female": radiobtn = document.getElementById("female").checked = true; break;
            default: radiobtn = document.getElementById("other").checked = true; break;
        }


        //DATES:
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();

        today = yyyy + '-' + mm + '-' + dd;
        //document.write(today);
        document.getElementById("date").min = today;


        
        var date;
        console.log("1 <%= dates %>");
        if (date = "<%= dates %>") {
            date = date.split(",");
            for (var a of date) {
                console.log("a: "+a);
                document.getElementById("date").value = a;
                addDate();
            }
        }
        

    }

    initialDitails();

    function beforeSubmit() {
        /* 
            this function will update the inforamtion in the database, according to the new one.
        */
        if (!(phoneNumbers.length) || !(jobTypes.length)) {
            show("noField");
            document.getElementById("noField").focus({ preventScroll: false });
            return false;
        }

        document.getElementById("phoneNumbers").value = phoneNumbers.toString();
        document.getElementById("types").value = jobTypes.toString();
        document.getElementById("dates").value = dates.toString();
        //document.getElementById("areas").value = countryAreas.toString();
    }

</script>

</html>